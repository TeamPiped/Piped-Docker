services:
    pipedfrontend:
        image: 1337kavin/piped-frontend:latest
        restart: unless-stopped
        depends_on:
            - piped
        container_name: piped-frontend
    ytproxy:
        image: 1337kavin/ytproxy:latest
        restart: unless-stopped
        volumes:
            - ./ytproxy:/app/socket
        container_name: ytproxy
    piped:
        image: 1337kavin/piped:latest
        restart: unless-stopped
        volumes:
            - ./config.properties:/app/config.properties
        depends_on:
            - ytproxy
            - postgres
        container_name: piped-backend
    varnish:
        image: varnish:6.6-alpine
        restart: unless-stopped
        volumes:
            - ./default.vcl:/etc/varnish/default.vcl
        container_name: varnish
    caddy:
        image: caddy:2-alpine
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - ./caddy/config:/config
            - ./ytproxy:/var/run/ytproxy
        container_name: caddy
    postgres:
        image: postgres:13-alpine
        restart: unless-stopped
        volumes:
            - ./data/db:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=piped
            - POSTGRES_USER=piped
            - POSTGRES_PASSWORD=changeme
        container_name: postgres
    watchtower:
        image: containrrr/watchtower
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /etc/timezone:/etc/timezone:ro
        environment:
            - WATCHTOWER_CLEANUP=true
            - WATCHTOWER_INCLUDE_RESTARTING=true
        container_name: watchtower
        command: piped-frontend piped-backend ytproxy varnish caddy postgres watchtower
